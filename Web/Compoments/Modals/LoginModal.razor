@using Domain.Entities;
@using Newtonsoft.Json;
@using Web.Data;
@inject GlobalStateService GlobalState
@inject ProtectedSessionStorage ProtectedSessionStore

<Modal
  Title=@("Login")
  Visible=@(Visible)
  ShowModalChanged=@(ShowModalChanged)
  ButtonTextSuccess=@("Entrar")
  ButtonTextCancel=@("Voltar")
  OnSave=@(TryLogin)
  AlertText=@(alertText)
  AlertType=@(alertType)
>

  <form>
    <div class="form-group input-group">
      <div class="input-group-prepend">
        <span class="input-group-text">Email</span>
      </div>
    <input @bind-value=@(User.Email) name="email" class="form-control" placeholder="" type="text">
    </div>

    <div class="form-group input-group">
      <div class="input-group-prepend">
        <span class="input-group-text">Senha</span>
      </div>
      <input @bind-value=@(User.Password) name="password" class="form-control" placeholder="" type="password">
    </div>
  </form>
</Modal>

@code {
    [Parameter]
    public bool Visible { get; set; } = false;
    [Parameter]
    public EventCallback<bool> ShowModalChanged { get; set; }

    public User User { get; set; } = new User();
    public string alertText { get; set; } = "";
    public string alertType { get; set; } = "";

    private async void TryLogin()
    {
        try
        {
            var service = new AuthService();

            var response = await service.Signin(User);

            GlobalState.Load(response);

            StateHasChanged();

            await ShowModalChanged.InvokeAsync(false);
        }
        catch (Exception ex) 
        {
            alertText = ex.Message;
            alertType = "danger";
        }
    }
}

<style>
  form {
    padding: 0px 10px;
  }

  .input-group {
    margin: 10px 0px;
  }
</style>
